name: Run python tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: "0 5 * * *"

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13", "3.14"]

    name: Testing Python ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pylint mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
        pylint reolink_aio
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 reolink_aio --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 reolink_aio --count --exit-zero --max-line-length=175 --statistics
    - name: isort
      run: |
        isort reolink_aio
    - name: Black formatting
      uses: psf/black@stable
      with:
        options: "--check --verbose"
        src: "./reolink_aio"
    - name: mypy type checking
      run: |
        mypy reolink_aio 
